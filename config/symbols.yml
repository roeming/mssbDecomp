global:
  #0x800848c4: __CARDRead
  #0x80084a04: __CARDRead
  #0x800a7544: DVDConvertPathToEntrynum

  ### .init
  #__start.o
  0x80003100: __check_pad3
  0x80003140: __set_debug_bba
  0x8000314c: __get_debug_bba
  0x80003154: __start
  0x800032b0: __init_registers
  0x80003340: __init_data
  0x80003400: __init_hardware
  0x80003424: __flush_cache
  0x8000540c: memset
  0x8000543c: memset_impl
  0x800054f4: memcpy

  ### .text
  0x80009180: main
  0x800096dc: get_file_entrynums
  # PPCArch.o
  0x8006d024: PPCMfmsr
  0x8006d02c: PPCMtmsr
  0x8006d034: PPCMfhid0
  0x8006d03c: PPCMthid0
  0x8006d044: PPCMfl2cr
  0x8006d04c: PPCMtl2cr
  0x8006d054: PPCMtdec
  0x8006d05c: PPCSync
  0x8006d064: PPCHalt
  0x8006d078: PPCMtmmcr0
  0x8006d080: PPCMtmmcr1
  0x8006d088: PPCMtpmc1
  0x8006d090: PPCMtpmc2
  0x8006d098: PPCMtpmc3
  0x8006d0a0: PPCMtpmc4
  0x8006d0a8: PPCMffpscr
  0x8006d0c8: PPCMtfpscr
  0x8006d0f0: PPCMfhid2
  0x8006d0f8: PPCMthid2
  0x8006d100: PPCMtwpar
  0x8006d108: PPCDisableSpeculation
  0x8006d130: PPCSetFpNonIEEEMode
  0x8006d138: __OS_FPTRInit

  0x8006d2c4: OSInit
  0x8006db70: __OSPSInit
  0x8006dbc4: __OSGetDIConfig
  0x8006debc: OSSetAlarm
  0x8006e360: DLInsert
  0x8006e5c0: __OSInitAudioSystem
  0x8006e77c: __OSStopAudioSystem
  # OSCache.o
  0x8006e854: DCEnable
  0x8006e868: DCInvalidateRange
  0x8006e894: DCFlushRange
  0x8006e8c4: DCStoreRange
  0x8006e8f4: DCFlushRangeNoSync
  0x8006e920: DCStoreRangeNoSync
  0x8006e94c: ICInvalidateRange
  0x8006e980: ICFlashInvalidate
  0x8006e990: ICEnable
  0x8006e9a4: __LCEnable
  0x8006ea70: LCEnable
  0x8006eaa8: LCDisable
  0x8006ead0: LCLoadBlocks
  0x8006eaf4: LCStoreBlocks
  0x8006eb18: LCLoadData
  0x8006ebc4: LCStoreData
  0x8006ec70: LCQueueWait
  0x8006ec84: L2GlobalInvalidate
  0x8006ee7c: __OSCacheInit
  0x8006ef70: __OSLoadFPUContext
  0x8006f094: __OSSaveFPUContext
  0x8006f1c4: OSSetCurrentContext
  0x8006f220: OSGetCurrentContext
  0x8006f22c: OSSaveContext
  0x8006f2ac: OSLoadContext
  0x8006f384: OSGetStackPointer
  0x8006f38c: OSClearContext
  0x8006f3b0: OSInitContext
  0x8006f46c: OSDumpContext
  0x8006f798: __OSContextInit
  0x8006f7e0: OSReport
  0x8006f860: OSPanic
  0x8006fe8c: PackArgs
  0x80070014: Run
  0x80070050: ReadDisc
  0x800700c8: __OSGetExecParams
  0x800707ec: GetFontCode
  0x80070b00: OSDisableInterrupts
  0x80070b14: OSEnableInterrupts
  0x80070b28: OSRestoreInterrupts
  0x80070bf0: SetInterruptMask
  0x80070ec8: __OSMaskInterrupts
  0x80070f50: __OSUnmaskInterrupts

  # os/OSLink.c
  0x8007136c: OSNotifyLink
  0x80071370: OSNotifyUnlink
  0x80071910: OSLink
  0x80071b6c: OSUnlink
  0x80071d40: __OSModuleInit

  0x80071d58: OSInitMessageQueue
  0x80071db8: OSSendMessage
  0x80071e80: OSReceiveMessage
  0x80072104: RealMode
  0x8007211c: __OSInitMemoryProtection
  0x80072234: __OSUnlockAllMutex
  # OSReboot.o
  0x800722a4: __OSReboot
  # OSReset.o
  0x800724c4: KillThreads
  0x80072574: OSResetSystem
  0x8007252c: __OSDoHotReset
  0x80072b98: WriteSram
  0x80072cb0: __OSInitSram
  0x80072dec: __OSLockSram
  0x80072e48: __OSLockSramEx
  0x80072ea4: UnlockSram
  0x800731e0: __OSUnlockSram
  0x80073204: __OSUnlockSramEx
  0x80073238: OSGetSoundMode
  0x80073470: OSGetWirelessID
  0x800734f4: OSSetWirelessID
  0x800735a0: OSGetGbsMode
  0x80073610: OSSetGbsMode
  # OSSemaphore.o
  0x800736c8: OSInitSemaphore
  0x80073720: OSWaitSemaphore
  0x80073790: OSSignalSemaphore
  0x80073810: __OSInitSystemCall
  # OSThread.o
  0x80073874: DefaultSwitchThreadCallback
  0x80073878: __OSThreadInit
  0x800739d0: OSInitThreadQueue
  0x800739e0: OSGetCurrentThread
  0x800739ec: OSIsThreadSuspended
  0x80073a08: OSDisableScheduler
  0x80073a48: OSEnableScheduler
  0x80073a88: UnsetRun
  0x80073af0: __OSGetEffectivePriority
  0x80073b2c: SetEffectivePriority
  0x80073cec: SelectThread
  0x80073f14: __OSReschedule
  0x80073f44: OSCreateThread
  0x8007412c: OSExitThread
  0x80074210: OSCancelThread
  0x800743cc: OSResumeThread
  0x80074654: OSSuspendThread
  0x800747c4: OSSleepThread
  0x800748b0: OSWakeupThread
  0x800749b4: OSClearStack

  0x80074a60: OSGetTime
  0x80074a80: __OSGetSystemTime
  0x80074ae4: GetDates
  0x80074c80: OSTicksToCalendarTime
  0x80074e84: __init_user
  0x80074ea4: __init_cpp
  0x80074ef8: _ExitProcess
  0x80074f18: DBInit
  0x80074fb4: DBPrintf
  0x80075030: PSMTXCopy
  0x80075064: PSMTXConcat
  0x80075180: PSMTXInverse
  0x800754ec: PSMTXTransApply
  0x8007565c: C_MTXLookAt
  0x80075870: PSMTXMultVec
  0x800758c4: PSMTXMultVecArray
  0x80075b50: PSMTX44Concat
  0x80076188: PSMTX44MultVec
  0x80076200: PSMTX44MultVecArray
  0x800762f0: PSVECAdd
  0x80076314: PSVECSubtract
  0x800763fc: PSVECCrossProduct
  0x800764b4: PSQUATAdd
  0x800764d8: PSQUATMultiply
  0x80076a1c: PSMTXReorder
  0x800778ac: __DVDLowTestAlarm

  # dvdfs.o
  0x800778e4: __DVDFSInit
  0x8007791c: DVDConvertPathToEntrynum
  0x80077c10: DVDFastOpen
  0x80077c84: DVDOpen
  0x80077d4c: DVDClose
  0x80077d70: entryToPath
  0x80077ed0: DVDGetCurrentDir
  0x80077f94: DVDReadAsyncPrio
  0x80078054: cbForReadAsync
  0x80078084: DVDReadPrio
  0x8007819c: cbForReadSync
  0x800781c0: DVDPrepareStreamAsync
  0x800782ac: cbForPrepareStreamAsync

  0x80078578: stateTimeout
  0x80079ec8: DVDReadAbsAsyncPrio
  0x8007a148: DVDPrepareStreamAbsAsync
  0x8007a610: DVDGetCommandBlockStatus
  0x8007a9e4: DVDCancel
  0x8007acd0: __DVDTestAlarm
  0x8007ad40: __DVDPushWaitingQueue
  0x8007ada8: __DVDPopWaitingQueue
  0x8007ae48: __DVDCheckWaitingQueue
  0x8007aea0: __DVDDequeueWaitingQueue
  0x8007b00c: ErrorCode2Num
  0x8007b128: __DVDStoreErrorCode
  0x8007b1a4: DVDCompareDiskID
  0x8007cde4: VISetBlack
  0x8007ce60: GetCurrentDisplayPosition
  0x8007d0a0: VIGetDTVStatus
  0x8007d2f8: __VIGetCurrentPosition
  0x8007d358: ClampStick
  0x8007d488: PADClamp
  0x8007ee68: __PADDisableRecalibration
  
 # ai.c
  0x8007eee4: AIRegisterDMACallback     
  0x8007ef28: AIInitDMA     
  0x8007efb0: AIStartDMA     
  0x8007efc8: AIStopDMA     
  0x8007efe0: AIGetDMAStartAddr     
  0x8007effc: AIRegisterStreamCallback     
  0x8007f040: AIGetStreamSampleCount     
  0x8007f058: AIResetStreamSampleCount     
  0x8007f064: AISetStreamPlayState     
  0x8007f13c: AIGetStreamPlayState     
  0x8007f14c: AISetDSPSampleRate     
  0x8007f22c: AIGetDSPSampleRate     
  0x8007f240: __AI_set_stream_sample_rate     
  0x8007f314: AIGetStreamSampleRate     
  0x8007f324: AISetStreamVolLeft     
  0x8007f340: AIGetStreamVolLeft     
  0x8007f350: AISetStreamVolRight     
  0x8007f36c: AIGetStreamVolRight     
  0x8007f37c: AIInit     
  0x8007f4e8: __AISHandler     
  0x8007f564: __AIDHandler     
  0x8007f610: __AICallbackStackSwitch     
  0x8007f668: __AI_SRC_INIT

  0x8007f890: ARGetDMAStatus
  0x8007f8cc: ARStartDMA
  0x80081830: DSPReadMailFromDSP
  0x80081848: DSPSendMailToDSP
  0x80081990: DSPCancelTask
  0x800819d0: __DSP_debug_printf
  0x80081e44: __DSP_exec_task
  0x80081fe4: __DSP_boot_task
  0x800825f8: __CARDEnableInterrupt
  0x800826b8: __CARDReadStatus
  0x800827a8: __CARDClearStatus
  0x80082de8: __CARDReadSegment
  0x80083204: __CARDGetControlBlock
  0x800832bc: __CARDPutControlBlock
  0x80083350: CARDFreeBlocks
  0x800834a0: __CARDSync
  0x80083588: bitrev
  0x800836f4: ReadArrayUnlock
  0x80084c24: __CARDAllocBlock
  0x80084d3c: __CARDFreeBlock
  0x80084dd8: __CARDUpdateFatBlock
  0x80085024: __CARDUpdateDir
  0x800850e8: __CARDCheckSum
  0x80085298: VerifyID
  0x8008551c: VerifyDir
  0x8008575c: VerifyFAT
  0x800859e0: __CARDVerify
  0x80085a6c: CARDCheckExAsync
  0x80085ffc: CARDCheckAsync
  0x80086024: CARDCheck
  0x80086144: CARDProbeEx
  0x800866d0: __CARDMountCallback
  0x80086808: CARDMountAsync
  0x800869a8: CARDMount
  0x800869f0: DoUnmount
  0x80086a8c: CARDUnmount
  0x80086c7c: __CARDFormatRegionAsync
  0x800872d4: CARDFormatAsync
  0x8008731c: CARDFormat
  0x80087370: __CARDCompareFileName
  0x800873d8: __CARDAccess
  0x80087694: __CARDGetFileNo
  0x800877e4: CARDOpen
  0x80087900: CARDClose
  0x80087a8c: CARDCreateAsync
  0x80087cac: CARDCreate
  0x80087cf4: __CARDSeek
  0x80087fdc: CARDReadAsync
  0x80088120: CARDProgram
  0x80088388: CARDWriteAsync
  0x8008849c: CARDWrite
  0x80088588: CARDDeleteAsync
  0x80088698: CARDDelete
  0x800886e0: UpdateIconOffsets
  0x800888d8: CARDGetStatus
  0x800889ec: CARDSetStatusAsync
  0x80088b60: CARDSetStatus
  0x80088ba8: __CARDGetStatusEx
  0x80088c4c: __CARDSetStatusExAsync
  0x80088ee8: CARDGetSerialNo
  0x8008a598: GXInitFifoBase
  0x8008a604: GXInitFifoPtrs
  0x8008bcb8: GXSetArray
  0x8008ca08: GXAdjustForOverscan
  0x8008d83c: GXGetTexBufferSize
  0x8008d998: __GetImageTileCount
  0x8008dcac: GXInitTexObjCI
  0x8008e068: GXInitTlutObj
  0x8008e138: GXInitTexCacheRegion
  0x8008e22c: GXInitTlutRegion
  0x8008e264: GXInvalidateTexAll
  0x8008e56c: __GXSetTmemConfig
  0x8008ecf8: GXSetTevDirect
  0x80090314: GXLoadPosMtxImm
  0x80090364: GXLoadNrmMtxImm
  0x800903e8: GXLoadTexMtxImm
  0x8009119c: GXReadGP0Metric
  0x800911c8: GXReadGP1Metric
  0x80091478: DSInsertListObject
  0x8009150c: Strcmp
  0x80091570: DSInsertBranchBelow
  0x800960d8: InitMetroTRK_BBA
  0x800981e8: exit
  0x8009a8fc: tolower
  0x800a2b5c: SetExiInterruptMask
  0x800a2c50: EXIImm
  0x800a2eac: EXIImmEx
  0x800a2f4c: EXIDma
  0x800a3038: EXISync
  0x800a3284: EXIClearInterrupts
  0x800a32cc: EXISetExiCallback
  0x800a3348: __EXIProbe
  0x800a34bc: EXIProbe
  0x800a353c: EXIProbeEx
  0x800a35f0: EXIAttach
  0x800a36fc: EXIDetach
  0x800a37b8: EXISelect
  0x800a38e4: EXIDeselect
  0x800a3f78: EXILock
  0x800a406c: EXIUnlock
  0x800a4148: EXIGetState
  0x800a4538: ProbeBarnacle
  0x800a4b2c: SIIsChanBusy
  0x800a4b68: CompleteTransfer
  0x800a51a8: SIEnablePollingInterrupt
  0x800a5240: SIRegisterPollingHandler
  0x800a530c: SIUnregisterPollingHandler
  0x800a54b4: __SITransfer
  0x800a56c0: SIGetStatus
  0x800a5760: SISetXY
  0x800a57cc: SIEnablePolling
  0x800a5868: SIDisablePolling
  0x800a58d4: SIGetResponseRaw
  0x800a59a8: SIGetResponse
  0x800a5af8: SITransfer
  0x800a60c0: SIGetTypeAsync
  0x800a6654: decompress
  0x800a673c: read_bits
  0x800a70dc: load_disc_helper
  0x800a77a0: decompression_thread_function
  0x800a7a80: CB_ReadAsync_aaaa.dat
  0x800acf34: alloc2
  0x800acfd0: alloc
  0x800df594: do_src1
  0x800df72c: do_src2

  ### .sbss
  # __start.o
  0x803cbe10: Debug_BBA

 # ai.c
  0x803cbf78: __AIS_Callback
  0x803cbf7c: __AID_Callback
  0x803cbf80: __CallbackStack
  0x803cbf84: __OldStack
  0x803cbf88: __AI_init_flag
  0x803cbf8c: __AID_Active
  0x803cbf90: bound_32KHz
  0x803cbf98: bound_48KHz
  0x803cbfa0: min_wait
  0x803cbfa8: max_wait
  0x803cbfb0: buffer

  0x803c7010: decompression_thread_ptr

  0x81201164: DCInvalidateRange
  0x81202f38: PPCMtfpscr
  0x81206b8c: Decode

#src/os/ai.c:
 #.text
#   0x8007eee4: AIRegisterDMACallback     
#   0x8007ef28: AIInitDMA     
#   0x8007efb0: AIStartDMA     
#   0x8007efc8: AIStopDMA     
#   0x8007efe0: AIGetDMAStartAddr     
#   0x8007effc: AIRegisterStreamCallback     
#   0x8007f040: AIGetStreamSampleCount     
#   0x8007f058: AIResetStreamSampleCount     
#   0x8007f064: AISetStreamPlayState     
#   0x8007f13c: AIGetStreamPlayState     
#   0x8007f14c: AISetDSPSampleRate     
#   0x8007f22c: AIGetDSPSampleRate     
#   0x8007f240: __AI_set_stream_sample_rate     
#   0x8007f314: AIGetStreamSampleRate     
#   0x8007f324: AISetStreamVolLeft     
#   0x8007f340: AIGetStreamVolLeft     
#   0x8007f350: AISetStreamVolRight     
#   0x8007f36c: AIGetStreamVolRight     
#   0x8007f37c: AIInit     
#   0x8007f4e8: __AISHandler     
#   0x8007f564: __AIDHandler     
#   0x8007f610: __AICallbackStackSwitch     
#   0x8007f668: __AI_SRC_INIT
 #.sbss
  # 0x803cbf78: __AIS_Callback
  # 0x803cbf7c: __AID_Callback
  # 0x803cbf80: __CallbackStack
  # 0x803cbf84: __OldStack
  # 0x803cbf88: __AI_init_flag
  # 0x803cbf8c: __AID_Active
  # 0x803cbf90: bound_32KHz
  # 0x803cbf98: bound_48KHz
  # 0x803cbfa0: min_wait
  # 0x803cbfa8: max_wait
  # 0x803cbfb0: buffer
src/os/OSLink.c:
  #.text
  0x80071374: Relocate
  0x80071630: Link
  0x80071934: Undo
  #.data
  0x8010cb10: OSLinkError
  0x8010cb38: OSUnlinkError
